name: CI/CD

# Controls when the action will run
on:
  # Triggers the workflow on push to the main branch
  push:
    branches: [ main ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
  AWS_DEFAULT_REGION: 'eu-central-1'

# The following job runs all the steps necessary to ship the website into production
jobs:
  deploy:
    # Have the GitHub Runner use a Windows VM, because the Tailwind CSS standalone executable is a `tailwindcss-windows-x64.exe` (which I use locally, too)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Compile and minify CSS for production
      run: .\tailwindcss.exe -i css/input.css -o css/output.css --minify

    - name: Remove ".html" extension from all footer links, e.g. about.html -> about (for clean URLs)
      run: |
        $repositoryRoot = $env:GITHUB_WORKSPACE
        $htmlFileNames = @("index.html", "about.html", "legal.html", "contact.html", "api.html", "404.html")
        $htmlFilePaths = $htmlFileNames | ForEach-Object { Join-Path -Path $repositoryRoot -ChildPath $_ }
        foreach ($htmlFilePath in $htmlFilePaths) {
          $content = Get-Content -Path $htmlFilePath
          $content = $content -replace 'href="about.html"', 'href="about"'
          $content = $content -replace 'href="legal.html"', 'href="legal"'
          $content = $content -replace 'href="contact.html"', 'href="contact"'
          $content = $content -replace 'href="api.html"', 'href="api"'
          Set-Content -Path $htmlFilePath -Value $content
        }

    - name: Remove ".html" extension from all html files but the index.html (for clean URLs)
      run: |
        ren about.html "about"
        ren legal.html "legal"
        ren contact.html "contact"
        ren api.html "api"
        ren 404.html "404"

    - name: Deploy to AWS S3 Bucket
      run: |
        aws s3 cp index.html s3://${{ secrets.AWS_S3_BUCKET_NAME }}/index.html --cache-control max-age=604800;
        aws s3 cp sitemap.txt s3://${{ secrets.AWS_S3_BUCKET_NAME }}/sitemap.txt --cache-control max-age=604800;
        aws s3 sync . s3://${{ secrets.AWS_S3_BUCKET_NAME }} --exclude "*" --include "about" --include "legal" --include "contact" --include "api" --include "404" --content-type "text/html" --delete --cache-control max-age=604800;
        aws s3 cp css/output.css s3://${{ secrets.AWS_S3_BUCKET_NAME }}/css/output.css --cache-control max-age=604800;
        aws s3 cp logo.svg s3://${{ secrets.AWS_S3_BUCKET_NAME }}/logo.svg --cache-control max-age=604800;
        aws s3 cp romaji2kana.png s3://${{ secrets.AWS_S3_BUCKET_NAME }}/romaji2kana.png --cache-control max-age=604800;

    - name: Create AWS Cloudfront Invalidation
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
